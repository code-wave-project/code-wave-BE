name: Deploy Spring Boot Gradle App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 13.216.143.130 >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/id_rsa ubuntu@13.216.143.130 << 'EOF'
            set -e  # 스크립트 실행 중 오류 발생 시 중단

            # 🔹 1. 작업 디렉토리 이동 (없으면 클론)
            if [ ! -d "/home/ubuntu/code-wave-BE" ]; then
              git clone https://github.com/내-깃허브-아이디/code-wave-BE.git /home/ubuntu/code-wave-BE
            fi
            cd /home/ubuntu/code-wave-BE

            # 🔹 2. 최신 코드 가져오기
            git reset --hard
            git pull origin main

            # 🔹 3. Gradle 빌드 실행
            ./gradlew build -x test

            # 🔹 4. 실행 중인 애플리케이션 종료 (8080 포트 사용 중이면 강제 종료)
            PID=$(sudo lsof -t -i:8080 || true)
            if [ ! -z "$PID" ]; then
              echo "🛑 기존 애플리케이션 종료 (PID: $PID)"
              sudo kill -9 $PID
            fi

            # 🔹 5. Spring Boot 애플리케이션 실행
            echo "🚀 Spring Boot 애플리케이션 실행 중..."
            nohup java -jar build/libs/*.jar > app.log 2>&1 &

            echo "✅ 배포 완료!"
          EOF
