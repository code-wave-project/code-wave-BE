name: Deploy Spring Boot Gradle App to EC2

on:
  push:
    branches:
      - main  

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test 

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: springboot-app
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: springboot-app

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            cd ~/app || mkdir ~/app && cd ~/app

            # 기존 컨테이너 중지 및 삭제
            docker stop springboot_app || true
            docker rm springboot_app || true
            docker rmi springboot-app || true

            # 기존 JAR 파일 삭제 후 업로드
            rm -rf springboot-app.jar
            mv ~/springboot-app/build/libs/*.jar springboot-app.jar

            # Docker 빌드 및 실행
            docker build -t springboot-app .
            docker run -d -p 8080:8080 --name springboot_app springboot-app
